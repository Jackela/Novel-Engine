apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-testing-orchestrator
  namespace: ai-testing
  labels:
    app.kubernetes.io/name: novel-engine-ai-testing
    app.kubernetes.io/component: orchestrator
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: novel-engine-ai-testing
      app.kubernetes.io/component: orchestrator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: novel-engine-ai-testing
        app.kubernetes.io/component: orchestrator
    spec:
      containers:
      - name: orchestrator
        image: novel-engine/ai-testing-orchestrator:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: SERVICES_BASE_PORT
          value: "8000"
        envFrom:
        - secretRef:
            name: ai-testing-secrets
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: ai-testing-config
      - name: logs
        emptyDir: {}
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-testing-browser-automation
  namespace: ai-testing
  labels:
    app.kubernetes.io/name: novel-engine-ai-testing
    app.kubernetes.io/component: browser-automation
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: novel-engine-ai-testing
      app.kubernetes.io/component: browser-automation
  template:
    metadata:
      labels:
        app.kubernetes.io/name: novel-engine-ai-testing
        app.kubernetes.io/component: browser-automation
    spec:
      containers:
      - name: browser-automation
        image: novel-engine/ai-testing-browser-automation:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8001
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: PLAYWRIGHT_BROWSERS_PATH
          value: "/app/.cache/ms-playwright"
        envFrom:
        - secretRef:
            name: ai-testing-secrets
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        - name: playwright-cache
          mountPath: /app/.cache/ms-playwright
        resources:
          requests:
            cpu: 300m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: ai-testing-config
      - name: logs
        emptyDir: {}
      - name: playwright-cache
        emptyDir: {}
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-testing-api-testing
  namespace: ai-testing
  labels:
    app.kubernetes.io/name: novel-engine-ai-testing
    app.kubernetes.io/component: api-testing
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: novel-engine-ai-testing
      app.kubernetes.io/component: api-testing
  template:
    metadata:
      labels:
        app.kubernetes.io/name: novel-engine-ai-testing
        app.kubernetes.io/component: api-testing
    spec:
      containers:
      - name: api-testing
        image: novel-engine/ai-testing-api-testing:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8002
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        envFrom:
        - secretRef:
            name: ai-testing-secrets
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            cpu: 150m
            memory: 256Mi
          limits:
            cpu: 400m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: ai-testing-config
      - name: logs
        emptyDir: {}
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-testing-ai-quality
  namespace: ai-testing
  labels:
    app.kubernetes.io/name: novel-engine-ai-testing
    app.kubernetes.io/component: ai-quality
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: novel-engine-ai-testing
      app.kubernetes.io/component: ai-quality
  template:
    metadata:
      labels:
        app.kubernetes.io/name: novel-engine-ai-testing
        app.kubernetes.io/component: ai-quality
    spec:
      containers:
      - name: ai-quality
        image: novel-engine/ai-testing-ai-quality:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8003
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        envFrom:
        - secretRef:
            name: ai-testing-secrets
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: ai-testing-config
      - name: logs
        emptyDir: {}
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-testing-results-aggregation
  namespace: ai-testing
  labels:
    app.kubernetes.io/name: novel-engine-ai-testing
    app.kubernetes.io/component: results-aggregation
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: novel-engine-ai-testing
      app.kubernetes.io/component: results-aggregation
  template:
    metadata:
      labels:
        app.kubernetes.io/name: novel-engine-ai-testing
        app.kubernetes.io/component: results-aggregation
    spec:
      containers:
      - name: results-aggregation
        image: novel-engine/ai-testing-results-aggregation:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8004
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        envFrom:
        - secretRef:
            name: ai-testing-secrets
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        - name: data
          mountPath: /app/data
        resources:
          requests:
            cpu: 150m
            memory: 256Mi
          limits:
            cpu: 400m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8004
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8004
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: ai-testing-config
      - name: logs
        emptyDir: {}
      - name: data
        emptyDir: {}
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-testing-notification
  namespace: ai-testing
  labels:
    app.kubernetes.io/name: novel-engine-ai-testing
    app.kubernetes.io/component: notification
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: novel-engine-ai-testing
      app.kubernetes.io/component: notification
  template:
    metadata:
      labels:
        app.kubernetes.io/name: novel-engine-ai-testing
        app.kubernetes.io/component: notification
    spec:
      containers:
      - name: notification
        image: novel-engine/ai-testing-notification:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8005
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        envFrom:
        - secretRef:
            name: ai-testing-secrets
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 300m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8005
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8005
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: ai-testing-config
      - name: logs
        emptyDir: {}
      restartPolicy: Always