# Multi-stage Dockerfile for AI Testing Services
FROM python:3.11-slim as base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    wget \
    gnupg \
    && rm -rf /var/lib/apt/lists/*

# Install Playwright dependencies for browser automation
RUN apt-get update && apt-get install -y \
    libnss3 \
    libnspr4 \
    libatk-bridge2.0-0 \
    libdrm2 \
    libxkbcommon0 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libgbm1 \
    libxss1 \
    libasound2 \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements
COPY requirements.txt .
COPY requirements-services.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install --no-cache-dir -r requirements-services.txt

# Install Playwright browsers
RUN playwright install chromium firefox webkit

# Copy application code
COPY ai_testing/ ./ai_testing/
COPY src/ ./src/
COPY config_loader.py .

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser
RUN chown -R appuser:appuser /app
USER appuser

# === Browser Automation Service ===
FROM base as browser-automation

LABEL name="ai-testing-browser-automation"
LABEL version="1.0.0"
LABEL description="Browser Automation Service for AI Testing"

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

EXPOSE 8001
CMD ["python", "-m", "uvicorn", "ai_testing.services.browser_automation_service:app", "--host", "0.0.0.0", "--port", "8001"]

# === API Testing Service ===
FROM base as api-testing

LABEL name="ai-testing-api-testing"
LABEL version="1.0.0"
LABEL description="API Testing Service for AI Testing"

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8002/health || exit 1

EXPOSE 8002
CMD ["python", "-m", "uvicorn", "ai_testing.services.api_testing_service:app", "--host", "0.0.0.0", "--port", "8002"]

# === AI Quality Assessment Service ===
FROM base as ai-quality

LABEL name="ai-testing-ai-quality"
LABEL version="1.0.0"
LABEL description="AI Quality Assessment Service for AI Testing"

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8003/health || exit 1

EXPOSE 8003
CMD ["python", "-m", "uvicorn", "ai_testing.services.ai_quality_service:app", "--host", "0.0.0.0", "--port", "8003"]

# === Results Aggregation Service ===
FROM base as results-aggregation

LABEL name="ai-testing-results-aggregation"
LABEL version="1.0.0"
LABEL description="Results Aggregation Service for AI Testing"

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8004/health || exit 1

EXPOSE 8004
CMD ["python", "-m", "uvicorn", "ai_testing.services.results_aggregation_service:app", "--host", "0.0.0.0", "--port", "8004"]

# === Notification Service ===
FROM base as notification

LABEL name="ai-testing-notification"
LABEL version="1.0.0"
LABEL description="Notification Service for AI Testing"

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8005/health || exit 1

EXPOSE 8005
CMD ["python", "-m", "uvicorn", "ai_testing.services.notification_service:app", "--host", "0.0.0.0", "--port", "8005"]