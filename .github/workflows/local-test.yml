name: Local Testing (act)

# This workflow is optimized for local testing with act
# Run with: act -W .github/workflows/local-test.yml

on:
  workflow_dispatch:
  push:
    branches: [ main, develop, feature/* ]

env:
  PYTHON_VERSION: '3.9'
  NODE_VERSION: '18'

jobs:
  # Quick local tests - optimized for act
  local-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest black flake8

    - name: Quick syntax check
      run: python -m py_compile src/**/*.py || true

    - name: Run fast tests only
      run: |
        pytest tests/test_foundation.py tests/test_data_models.py -v --tb=short
      env:
        PYTHONPATH: ${{ github.workspace }}

  # Frontend quick check
  local-frontend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Check TypeScript compilation
      run: npx tsc --noEmit || true

    - name: Build frontend
      run: npm run build

  # Integration smoke test
  local-integration:
    runs-on: ubuntu-latest
    needs: [local-backend, local-frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Start API server (background)
      run: |
        cd src/api
        python main_api_server.py &
        sleep 5
      env:
        PYTHONPATH: ${{ github.workspace }}

    - name: Test API health
      run: |
        curl -f http://localhost:8000/health || echo "API not responding"

    - name: Run integration smoke test
      run: |
        python -c "
        import requests
        try:
            r = requests.get('http://localhost:8000/health')
            print(f'✅ API Health: {r.status_code}')
        except:
            print('⚠️ API not accessible')
        "
      continue-on-error: true