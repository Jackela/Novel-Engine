{
  "files_to_migrate": [
    {
      "source": "tests\\test_ai_intelligence_integration.py",
      "category": "core",
      "confidence": 1.0,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "pytest",
          "asyncio",
          "tempfile",
          "json",
          "datetime",
          "pathlib",
          "unittest.mock",
          "src.ai_intelligence.integration_orchestrator",
          "src.ai_intelligence.ai_orchestrator",
          "src.core.system_orchestrator",
          "src.core.data_models",
          "src.ai_intelligence.analytics_platform",
          "src.ai_intelligence.story_quality_engine"
        ],
        "test_classes": [
          "TestAIIntelligenceIntegration",
          "TestPerformanceValidation"
        ],
        "test_functions": [],
        "markers": [
          "asyncio"
        ],
        "keywords": [
          "agent",
          "character",
          "integration",
          "config",
          "event",
          "logging",
          "dynamic",
          "performance",
          "async",
          "ui",
          "quality",
          "story"
        ],
        "complexity": "moderate"
      }
    },
    {
      "source": "tests\\test_api_endpoints_comprehensive.py",
      "category": "api",
      "confidence": 1.0,
      "target": "tests/integration/api",
      "analysis": {
        "imports": [
          "pytest",
          "json",
          "time",
          "typing",
          "unittest.mock",
          "fastapi.testclient",
          "api_server"
        ],
        "test_classes": [
          "TestHealthEndpoints",
          "TestCharacterEndpoints",
          "TestSimulationEndpoints",
          "TestCampaignEndpoints",
          "TestErrorHandlingAndEdgeCases",
          "TestSecurityAndValidation",
          "TestPerformanceAndLoad",
          "TestAPIDocumentation"
        ],
        "test_functions": [
          "test_root_endpoint_returns_storyforge_branding",
          "test_health_endpoint_basic_functionality",
          "test_system_status_endpoint",
          "test_policy_endpoint",
          "test_characters_list_returns_generic_characters",
          "test_character_detail_pilot",
          "test_character_detail_scientist",
          "test_character_detail_engineer",
          "test_character_detail_nonexistent",
          "test_character_detail_legacy_branded_characters",
          "test_enhanced_character_endpoint",
          "test_simulation_with_generic_characters",
          "test_simulation_minimum_characters_validation",
          "test_simulation_maximum_characters_validation",
          "test_simulation_with_all_generic_characters",
          "test_simulation_story_quality",
          "test_simulation_with_custom_setting_scenario",
          "test_campaigns_list_endpoint",
          "test_campaign_creation_with_generic_theme",
          "test_invalid_json_request",
          "test_missing_required_fields",
          "test_empty_character_list",
          "test_nonexistent_character_in_simulation",
          "test_rate_limiting_compliance",
          "test_cors_headers_present",
          "test_input_sanitization",
          "test_sql_injection_prevention",
          "test_excessive_input_length_handling",
          "test_response_time_health_check",
          "test_response_time_character_list",
          "test_simulation_execution_time",
          "test_concurrent_requests_handling",
          "test_openapi_schema_accessibility",
          "test_redoc_documentation_accessibility"
        ],
        "markers": [
          "slow"
        ],
        "keywords": [
          "api",
          "server",
          "endpoint",
          "fastapi",
          "character",
          "integration",
          "config",
          "event",
          "equipment",
          "performance",
          "ui",
          "quality",
          "security",
          "narrative",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_character_system_comprehensive.py",
      "category": "interactions",
      "confidence": 1.0,
      "target": "tests/integration/interactions",
      "analysis": {
        "imports": [
          "pytest",
          "os",
          "tempfile",
          "yaml",
          "json",
          "pathlib",
          "unittest.mock",
          "src.persona_agent",
          "character_factory",
          "director_agent",
          "src.event_bus"
        ],
        "test_classes": [
          "TestCharacterLoading",
          "TestGenericCharacterProfiles",
          "TestCharacterStatistics",
          "TestCharacterFactory",
          "TestCharacterMemorySystem",
          "TestCharacterInteractions",
          "TestPerformanceAndScalability",
          "TestCharacterValidation"
        ],
        "test_functions": [
          "test_all_generic_characters_loadable",
          "test_character_directory_structure",
          "test_character_metadata_validation",
          "test_no_branded_content_in_characters",
          "test_character_load_error_handling",
          "test_character_context_loading",
          "test_pilot_character_profile",
          "test_scientist_character_profile",
          "test_engineer_character_profile",
          "test_test_character_profile",
          "test_combat_stats_validity",
          "test_psychological_profile_validity",
          "test_equipment_completeness",
          "test_character_relationships",
          "test_character_factory_initialization",
          "test_character_creation_validation",
          "test_character_template_validation",
          "test_character_memory_initialization",
          "test_memory_persistence_across_sessions",
          "test_memory_log_format",
          "test_character_decision_making",
          "test_character_context_awareness",
          "test_character_personality_consistency",
          "test_multi_character_simulation",
          "test_character_loading_performance",
          "test_multiple_character_memory_usage",
          "test_concurrent_character_operations",
          "test_character_data_consistency",
          "test_character_balance_validation",
          "test_sci_fi_theme_consistency"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "config",
          "event",
          "logging",
          "interaction",
          "equipment",
          "performance",
          "ui",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_data_models.py",
      "category": "core",
      "confidence": 1.0,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "pytest",
          "json",
          "datetime",
          "uuid",
          "src.core.data_models",
          "src.core.types"
        ],
        "test_classes": [
          "TestSacredMemoryItem",
          "TestSacredCharacterIdentity",
          "TestSacredPhysicalCondition",
          "TestSacredEquipmentItem",
          "TestSacredEquipmentState",
          "TestSacredRelationshipState",
          "TestSacredCharacterState",
          "TestSacredDynamicContext",
          "TestSacredInteractionStructures",
          "TestSacredValidationFunctions",
          "TestSacredPerformance"
        ],
        "test_functions": [
          "test_memory_item_creation_blessed_by_omnissiah",
          "test_memory_item_validation_blessed_by_purity",
          "test_memory_item_bounds_sanctified_by_constraints",
          "test_character_identity_creation_blessed_by_essence",
          "test_character_identity_validation_blessed_by_requirements",
          "test_physical_condition_creation_blessed_by_health",
          "test_physical_condition_health_assessment_blessed_by_logic",
          "test_equipment_item_creation_blessed_by_gear",
          "test_equipment_item_validation_blessed_by_naming",
          "test_equipment_item_bounds_sanctified_by_limits",
          "test_equipment_functionality_blessed_by_condition",
          "test_equipment_state_creation_blessed_by_inventory",
          "test_equipment_combat_effectiveness_blessed_by_calculation",
          "test_equipment_empty_combat_blessed_by_fallback",
          "test_relationship_creation_blessed_by_bonds",
          "test_relationship_validation_blessed_by_requirements",
          "test_relationship_bounds_sanctified_by_limits",
          "test_relationship_interaction_update_blessed_by_evolution",
          "test_character_state_creation_blessed_by_completeness",
          "test_character_combat_readiness_blessed_by_calculation",
          "test_dynamic_context_creation_blessed_by_completeness",
          "test_dynamic_context_validation_blessed_by_requirements",
          "test_dynamic_context_memory_retrieval_blessed_by_filtering",
          "test_dynamic_context_json_serialization_blessed_by_persistence",
          "test_character_interaction_creation_blessed_by_events",
          "test_character_interaction_validation_blessed_by_participants",
          "test_validate_blessed_data_model_success",
          "test_validate_blessed_data_model_failure",
          "test_memory_item_creation_performance_blessed_by_speed"
        ],
        "markers": [],
        "keywords": [
          "api",
          "agent",
          "persona",
          "character",
          "event",
          "interaction",
          "equipment",
          "dynamic",
          "performance",
          "ui"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_director_agent.py",
      "category": "agents",
      "confidence": 1.0,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "unittest",
          "unittest.mock",
          "director_agent",
          "src.persona_agent",
          "src.event_bus",
          "shared_types"
        ],
        "test_classes": [
          "TestDirectorAgent"
        ],
        "test_functions": [
          "test_initialization",
          "test_run_turn_emits_event",
          "test_handle_agent_action",
          "test_handle_agent_action_with_no_action"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "event"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\test_enhanced_bridge.py",
      "category": "bridges",
      "confidence": 1.0,
      "target": "tests/integration/bridges",
      "analysis": {
        "imports": [
          "pytest",
          "asyncio",
          "unittest.mock",
          "pathlib",
          "sys",
          "enhanced_multi_agent_bridge_refactored",
          "src.bridge.types",
          "src.bridge.dialogue_manager",
          "src.bridge.llm_coordinator"
        ],
        "test_classes": [
          "TestBridgeConfiguration",
          "TestEnhancedMultiAgentBridge",
          "TestBridgeFactory",
          "TestBridgeIntegration"
        ],
        "test_functions": [
          "test_default_configuration",
          "test_custom_configuration",
          "test_bridge_initialization",
          "test_request_priority_determination",
          "test_execution_time_calculation"
        ],
        "markers": [
          "asyncio"
        ],
        "keywords": [
          "agent",
          "director",
          "integration",
          "config",
          "bridge",
          "llm",
          "multi_agent",
          "performance",
          "optimization",
          "async",
          "ui",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_error_handler.py",
      "category": "performance",
      "confidence": 0.4,
      "target": "tests/performance",
      "analysis": {
        "imports": [
          "pytest",
          "asyncio",
          "datetime",
          "unittest.mock",
          "sys",
          "core.error_handler"
        ],
        "test_classes": [
          "TestErrorContext",
          "TestCentralizedErrorHandler",
          "TestGlobalErrorHandler"
        ],
        "test_functions": [
          "test_error_context_creation",
          "test_error_handler_initialization",
          "test_error_severity_detection",
          "test_error_category_detection",
          "test_recovery_strategy_selection",
          "test_error_statistics"
        ],
        "markers": [
          "asyncio"
        ],
        "keywords": [
          "performance",
          "async",
          "ui",
          "story"
        ],
        "complexity": "moderate"
      }
    },
    {
      "source": "tests\\test_event_bus.py",
      "category": "core",
      "confidence": 1.0,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "unittest",
          "unittest.mock",
          "src.event_bus"
        ],
        "test_classes": [
          "TestEventBus"
        ],
        "test_functions": [
          "test_subscribe_and_emit",
          "test_multiple_subscribers",
          "test_emit_to_unsubscribed_event",
          "test_callback_exception_handling"
        ],
        "markers": [],
        "keywords": [
          "event"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\test_event_integration.py",
      "category": "core",
      "confidence": 1.0,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "unittest",
          "unittest.mock",
          "director_agent",
          "src.persona_agent",
          "src.event_bus",
          "shared_types"
        ],
        "test_classes": [
          "TestEventIntegration"
        ],
        "test_functions": [
          "test_full_turn_event_flow"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "event",
          "async",
          "ui"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\test_foundation.py",
      "category": "core",
      "confidence": 1.0,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "os",
          "yaml",
          "pytest",
          "pathlib",
          "re"
        ],
        "test_classes": [
          "TestLegalFoundation",
          "TestConfigurationFoundation",
          "TestDocumentationFoundation",
          "TestProjectStructure",
          "TestComplianceValidation"
        ],
        "test_functions": [
          "test_legal_file_exists",
          "test_legal_file_content",
          "test_legal_fan_mode_compliance",
          "test_notice_file_exists",
          "test_notice_file_content",
          "test_settings_yaml_exists",
          "test_settings_yaml_valid_syntax",
          "test_settings_yaml_required_sections",
          "test_legal_settings_configuration",
          "test_simulation_engine_settings",
          "test_adrs_directory_exists",
          "test_adrs_readme_exists",
          "test_core_adrs_exist",
          "test_developer_documentation_exists",
          "test_directory_structure",
          "test_private_directory_structure",
          "test_file_permissions_security",
          "test_readme_legal_disclaimer",
          "test_fan_mode_registry_structure",
          "test_ip_protection_mechanisms",
          "test_dmca_compliance_documentation"
        ],
        "markers": [],
        "keywords": [
          "api",
          "fastapi",
          "uvicorn",
          "agent",
          "director",
          "config",
          "performance",
          "ui",
          "security"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_integration_complete.py",
      "category": "core",
      "confidence": 1.0,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "pytest",
          "tempfile",
          "json",
          "time",
          "pathlib",
          "datetime",
          "typing",
          "unittest.mock"
        ],
        "test_classes": [
          "TestCompleteSystemIntegration"
        ],
        "test_functions": [
          "test_iron_laws_integration",
          "test_state_hashing_integration",
          "test_semantic_caching_integration",
          "test_token_budget_integration",
          "test_evaluation_system_integration",
          "test_end_to_end_integration",
          "test_performance_integration"
        ],
        "markers": [
          "skipif"
        ],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "config",
          "logging",
          "llm",
          "equipment",
          "performance",
          "optimization",
          "cache",
          "ui",
          "narrative"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\test_integration_comprehensive.py",
      "category": "core",
      "confidence": 1.0,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "pytest",
          "asyncio",
          "time",
          "json",
          "tempfile",
          "os",
          "pathlib",
          "unittest.mock",
          "fastapi.testclient",
          "concurrent.futures",
          "api_server",
          "director_agent",
          "src.persona_agent",
          "chronicler_agent",
          "character_factory"
        ],
        "test_classes": [
          "TestFullSystemIntegration",
          "TestAPIBackendIntegration",
          "TestCharacterSimulationIntegration",
          "TestStoryGenerationPipeline",
          "TestMultiComponentWorkflows",
          "TestPerformanceIntegration",
          "TestErrorPropagationAndRecovery",
          "TestSecurityValidationIntegration"
        ],
        "test_functions": [
          "test_end_to_end_simulation_workflow",
          "test_character_detail_to_simulation_integration",
          "test_system_health_to_functionality_integration",
          "test_multi_user_concurrent_simulation",
          "test_api_character_loading_backend_integration",
          "test_api_error_handling_backend_integration",
          "test_api_validation_backend_consistency",
          "test_character_loading_simulation_execution",
          "test_character_attributes_simulation_behavior",
          "test_multi_character_interaction_simulation",
          "test_simulation_to_story_pipeline",
          "test_character_context_story_integration",
          "test_narrative_style_story_consistency",
          "test_character_creation_to_simulation_workflow",
          "test_error_recovery_multi_component_workflow",
          "test_performance_multi_component_integration",
          "test_concurrent_api_backend_performance",
          "test_memory_usage_integration",
          "test_character_loading_error_propagation",
          "test_simulation_error_recovery_integration",
          "test_story_generation_error_handling_integration",
          "test_input_validation_api_to_backend",
          "test_brand_content_validation_integration",
          "test_data_integrity_across_components",
          "test_client"
        ],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "endpoint",
          "fastapi",
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "interaction",
          "performance",
          "optimization",
          "async",
          "ui",
          "quality",
          "security",
          "narrative",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_iron_laws.py",
      "category": "agents",
      "confidence": 0.6000000000000001,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "pytest",
          "tempfile",
          "json",
          "pathlib",
          "unittest.mock",
          "datetime"
        ],
        "test_classes": [
          "TestIronLawsValidation",
          "TestIronLawsRepairSystem",
          "TestIronLawsHelperMethods",
          "TestIronLawsIntegration",
          "TestIronLawsEdgeCases"
        ],
        "test_functions": [
          "test_iron_laws_validation_core",
          "test_causality_law_validation",
          "test_resource_law_validation",
          "test_physics_law_validation",
          "test_narrative_law_validation",
          "test_social_law_validation",
          "test_causality_repair",
          "test_resource_repair",
          "test_physics_repair",
          "test_narrative_repair",
          "test_social_repair",
          "test_comprehensive_repair_attempt",
          "test_group_violations_by_law",
          "test_get_current_world_context",
          "test_determine_overall_validation_result",
          "test_calculate_action_stamina_cost",
          "test_iron_laws_during_turn_processing",
          "test_iron_laws_error_handling",
          "test_iron_laws_performance_tracking",
          "test_invalid_action_handling",
          "test_malformed_character_data_handling",
          "test_resource_calculation_edge_cases",
          "test_repair_system_edge_cases"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "equipment",
          "performance",
          "ui",
          "narrative",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_llm_integration.py",
      "category": "bridges",
      "confidence": 1.0,
      "target": "tests/integration/bridges",
      "analysis": {
        "imports": [
          "unittest",
          "unittest.mock",
          "os",
          "sys",
          "shutil",
          "yaml",
          "src.persona_agent",
          "src.event_bus",
          "shared_types"
        ],
        "test_classes": [
          "TestLLMIntegration"
        ],
        "test_functions": [
          "test_llm_decision_making_returns_action",
          "test_llm_decision_making_handles_invalid_response",
          "test_llm_uses_fallback_when_no_api_key",
          "test_llm_decision_making_handles_api_failure_and_uses_fallback",
          "test_llm_decision_making_handles_observe_action"
        ],
        "markers": [],
        "keywords": [
          "api",
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "llm",
          "ui"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\test_logging_system.py",
      "category": "core",
      "confidence": 1.0,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "pytest",
          "asyncio",
          "json",
          "tempfile",
          "pathlib",
          "unittest.mock",
          "sys",
          "core.logging_system"
        ],
        "test_classes": [
          "TestLogContext",
          "TestStructuredLogger",
          "TestPerformanceTracker",
          "TestStructuredFormatter",
          "TestLoggerFactory"
        ],
        "test_functions": [
          "test_log_context_creation",
          "test_log_context_with_values",
          "test_structured_logger_initialization",
          "test_context_management",
          "test_basic_logging",
          "test_logging_with_context",
          "test_error_logging",
          "test_performance_tracking",
          "test_audit_logging",
          "test_security_logging",
          "test_logger_statistics",
          "test_performance_tracker_creation",
          "test_performance_tracker_metrics",
          "test_json_formatter",
          "test_readable_formatter",
          "test_formatter_with_none_component",
          "test_get_logger",
          "test_configure_defaults"
        ],
        "markers": [
          "asyncio"
        ],
        "keywords": [
          "director",
          "config",
          "event",
          "logging",
          "performance",
          "async",
          "cache",
          "ui",
          "security"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_performance_optimizations.py",
      "category": "performance",
      "confidence": 1.0,
      "target": "tests/performance",
      "analysis": {
        "imports": [
          "pytest",
          "asyncio",
          "time",
          "json",
          "websockets",
          "unittest.mock",
          "typing",
          "src.api.story_generation_api",
          "src.core.performance_cache",
          "src.core.system_orchestrator"
        ],
        "test_classes": [
          "TestWebSocketOptimizations",
          "TestPerformanceCache",
          "TestIntegratedPerformance",
          "TestFrontendOptimizations"
        ],
        "test_functions": [
          "test_connection_pool_creation",
          "test_connection_pool_add_remove",
          "test_api_cache_deduplication",
          "test_mobile_responsive_behavior"
        ],
        "markers": [
          "asyncio"
        ],
        "keywords": [
          "api",
          "agent",
          "character",
          "event",
          "performance",
          "optimization",
          "async",
          "cache",
          "frontend",
          "ui",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_persona_agent.py",
      "category": "agents",
      "confidence": 1.0,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "unittest",
          "unittest.mock",
          "os",
          "json",
          "src.persona_agent",
          "src.event_bus",
          "shared_types"
        ],
        "test_classes": [
          "TestPersonaAgent",
          "TestPersonaAgentCharacterLoading",
          "TestPersonaAgentDecisionMaking",
          "TestPersonaAgentWorldInterpretation",
          "TestPersonaAgentAIIntegration",
          "TestPersonaAgentMemoryAndEvolution"
        ],
        "test_functions": [
          "test_initialization_subscribes_to_turn_start",
          "test_handle_turn_start_emits_action",
          "test_handle_turn_start_with_no_action",
          "test_load_character_context_success",
          "test_load_character_context_missing_directory",
          "test_character_properties",
          "test_read_cached_file",
          "test_derive_agent_id_from_path",
          "test_estimate_trait_strength",
          "test_parse_character_sheet_content",
          "test_make_decision_with_world_state",
          "test_make_decision_ai_fallback",
          "test_assess_threat_levels",
          "test_decision_weight_application",
          "test_assess_current_situation",
          "test_identify_available_actions",
          "test_evaluate_action_option",
          "test_parse_llm_response",
          "test_subjective_worldview_initialization",
          "test_world_event_processing",
          "test_memory_integration",
          "test_ai_query_with_valid_api_key",
          "test_ai_query_without_api_key",
          "test_api_error_handling",
          "test_short_term_memory_management",
          "test_long_term_memory_consolidation",
          "test_relationship_evolution",
          "test_morale_and_status_tracking"
        ],
        "markers": [],
        "keywords": [
          "api",
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "llm",
          "interaction",
          "cache",
          "ui"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_persona_core.py",
      "category": "agents",
      "confidence": 0.8999999999999999,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "pytest",
          "asyncio",
          "tempfile",
          "pathlib",
          "unittest.mock",
          "sys",
          "agents.persona_core",
          "agents.persona_memory",
          "agents.persona_narrative",
          "agents.persona_actions"
        ],
        "test_classes": [
          "TestAgentIdentity",
          "TestPersonaCore",
          "TestPersonaCoreIntegration"
        ],
        "test_functions": [
          "test_agent_identity_creation",
          "test_agent_identity_defaults",
          "test_persona_core_initialization",
          "test_persona_core_status",
          "test_persona_core_component_integration"
        ],
        "markers": [
          "asyncio"
        ],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "event",
          "interaction",
          "async",
          "ui",
          "narrative"
        ],
        "complexity": "moderate"
      }
    },
    {
      "source": "tests\\test_quality_framework.py",
      "category": "quality",
      "confidence": 1.0,
      "target": "tests/unit/quality",
      "analysis": {
        "imports": [
          "pytest",
          "asyncio",
          "tempfile",
          "json",
          "pathlib",
          "unittest.mock",
          "typing",
          "src.core.data_models",
          "src.core.system_orchestrator",
          "src.database.context_db",
          "src.event_bus",
          "src.shared_types"
        ],
        "test_classes": [
          "TestDataModels",
          "TestSystemOrchestrator",
          "TestEventBus",
          "TestContextDatabase",
          "TestPersonaAgent",
          "TestDirectorAgent",
          "TestSharedTypes",
          "TestIntegrationScenarios",
          "TestErrorHandling",
          "TestPerformanceRequirements",
          "TestSecurityRequirements"
        ],
        "test_functions": [
          "test_character_creation",
          "test_character_validation",
          "test_world_state_creation",
          "test_action_result_creation",
          "test_campaign_state_creation",
          "test_orchestrator_initialization",
          "test_event_bus_initialization",
          "test_event_unsubscription",
          "test_handler",
          "test_persona_agent_initialization",
          "test_persona_agent_skill_check",
          "test_director_agent_initialization",
          "test_shared_types_availability",
          "test_action_type_enumeration",
          "test_decision_type_enumeration",
          "test_invalid_character_data_handling",
          "test_malformed_world_state_handling",
          "test_input_sanitization",
          "test_data_validation_boundaries",
          "test_configuration_security"
        ],
        "markers": [
          "performance",
          "asyncio",
          "security"
        ],
        "keywords": [
          "api",
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "interaction",
          "equipment",
          "performance",
          "async",
          "ui",
          "quality",
          "security",
          "narrative"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_schemas.py",
      "category": "core",
      "confidence": 0.6000000000000001,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "pytest",
          "json",
          "datetime",
          "typing",
          "uuid"
        ],
        "test_classes": [
          "TestEnumTypes",
          "TestSpatialTypes",
          "TestResourceTypes",
          "TestCharacterTypes",
          "TestActionTypes",
          "TestIronLawsTypes",
          "TestWorldStateTypes",
          "TestFogOfWarTypes",
          "TestTurnBriefTypes",
          "TestSimulationTypes",
          "TestAPITypes",
          "TestPerformanceTypes",
          "TestConsistencyTypes",
          "TestModelRegistry",
          "TestJSONSerialization"
        ],
        "test_functions": [
          "test_action_type_values",
          "test_entity_type_values",
          "test_validation_result_values",
          "test_fog_of_war_channel_values",
          "test_simulation_phase_values",
          "test_position_creation_valid",
          "test_position_defaults",
          "test_position_facing_validation",
          "test_position_accuracy_validation",
          "test_bounding_box_valid",
          "test_bounding_box_validation_errors",
          "test_area_creation",
          "test_resource_value_valid",
          "test_resource_value_validation",
          "test_resource_value_percentage_calculation",
          "test_equipment_creation",
          "test_equipment_defaults",
          "test_equipment_validation",
          "test_character_stats_valid",
          "test_character_stats_validation",
          "test_character_resources_creation",
          "test_character_state_defaults",
          "test_character_state_validation",
          "test_character_data_full_creation",
          "test_action_target_creation",
          "test_action_parameters_defaults",
          "test_action_parameters_validation",
          "test_proposed_action_creation",
          "test_proposed_action_confidence_validation",
          "test_validated_action_creation",
          "test_iron_laws_violation_creation",
          "test_iron_laws_report_creation",
          "test_iron_laws_report_properties",
          "test_world_entity_creation",
          "test_environmental_condition_creation",
          "test_world_state_creation",
          "test_world_state_utility_methods",
          "test_information_source_creation",
          "test_information_fragment_creation",
          "test_fog_of_war_filter_creation",
          "test_filtered_world_view_creation",
          "test_knowledge_fragment_creation",
          "test_contextual_prompt_creation",
          "test_contextual_prompt_compilation",
          "test_turn_brief_creation",
          "test_simulation_config_defaults",
          "test_simulation_config_validation",
          "test_simulation_state_creation",
          "test_turn_result_creation",
          "test_api_response_success",
          "test_api_response_error",
          "test_system_status_creation",
          "test_system_status_validation",
          "test_cache_entry_creation",
          "test_cache_entry_expiration",
          "test_performance_metrics_creation",
          "test_performance_metrics_validation",
          "test_state_hash_creation",
          "test_state_hash_validation",
          "test_consistency_check_creation",
          "test_model_registry_contains_expected_models",
          "test_model_registry_types_are_pydantic_models",
          "test_model_creation_from_registry",
          "test_character_data_json_roundtrip",
          "test_world_state_json_serialization",
          "test_iron_laws_report_json_serialization"
        ],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "agent",
          "persona",
          "character",
          "config",
          "event",
          "logging",
          "equipment",
          "performance",
          "cache",
          "ui"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_security_framework.py",
      "category": "security",
      "confidence": 1.0,
      "target": "tests/security",
      "analysis": {
        "imports": [
          "pytest",
          "asyncio",
          "tempfile",
          "os",
          "json",
          "time",
          "datetime",
          "typing",
          "unittest.mock",
          "src.security.auth_system",
          "src.security.input_validation",
          "src.security.rate_limiting",
          "src.security.security_headers",
          "src.security.data_protection",
          "src.security.security_logging"
        ],
        "test_classes": [
          "TestSecurityService",
          "TestInputValidator",
          "TestRateLimiter",
          "TestSecurityHeaders",
          "TestDataProtection",
          "TestSecurityLogging",
          "TestIntegratedSecurity"
        ],
        "test_functions": [
          "test_sql_injection_detection",
          "test_xss_detection",
          "test_command_injection_detection",
          "test_path_traversal_detection",
          "test_valid_input_passes",
          "test_json_validation",
          "test_csp_header_construction",
          "test_security_headers_application",
          "test_hsts_header_construction",
          "test_permissions_policy_construction",
          "test_encryption_service",
          "test_dictionary_encryption"
        ],
        "markers": [
          "asyncio"
        ],
        "keywords": [
          "api",
          "agent",
          "persona",
          "director",
          "integration",
          "config",
          "event",
          "logging",
          "performance",
          "async",
          "ui",
          "security",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_startup_guards.py",
      "category": "core",
      "confidence": 0.6000000000000001,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "os",
          "sys",
          "yaml",
          "json",
          "tempfile",
          "shutil",
          "pytest",
          "pathlib",
          "unittest.mock",
          "scripts.build_kb"
        ],
        "test_classes": [
          "TestStartupGuard",
          "TestKnowledgeBaseBuilder",
          "TestStartupGuardIntegration"
        ],
        "test_functions": [
          "test_startup_guard_initialization",
          "test_validate_configuration_success",
          "test_validate_configuration_missing_file",
          "test_validate_configuration_invalid_yaml",
          "test_validate_configuration_missing_sections",
          "test_validate_configuration_iron_laws_disabled",
          "test_validate_legal_compliance_success",
          "test_validate_legal_compliance_missing_legal_file",
          "test_validate_legal_compliance_missing_notice_file",
          "test_validate_legal_compliance_fan_mode_registry_creation",
          "test_validate_file_structure_creates_directories",
          "test_validate_file_structure_missing_required_files",
          "test_validate_file_structure_creates_private_gitignore",
          "test_validate_external_dependencies_missing_packages",
          "test_validate_external_dependencies_with_api_keys",
          "test_validate_knowledge_base_creates_structure",
          "test_validate_api_readiness_success",
          "test_validate_api_readiness_cors_warning",
          "test_validate_all_success",
          "test_validate_all_failure",
          "test_get_system_status",
          "test_knowledge_base_builder_initialization",
          "test_build_kb_success",
          "test_create_iron_laws_template",
          "test_create_fog_of_war_template",
          "test_create_narrative_templates",
          "test_complete_system_validation",
          "test_system_validation_with_warnings",
          "test_startup_guard_error_recovery"
        ],
        "markers": [],
        "keywords": [
          "api",
          "fastapi",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "performance",
          "cache",
          "ui",
          "security",
          "narrative"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_story_generation_comprehensive.py",
      "category": "specialized",
      "confidence": 1.0,
      "target": "tests/integration/components",
      "analysis": {
        "imports": [
          "pytest",
          "os",
          "tempfile",
          "json",
          "re",
          "pathlib",
          "unittest.mock",
          "chronicler_agent",
          "director_agent",
          "src.persona_agent"
        ],
        "test_classes": [
          "TestChroniclerAgentCore",
          "TestStoryContentQuality",
          "TestDebrandingValidation",
          "TestNarrativeStyleAndTone",
          "TestCharacterIntegration",
          "TestTemplateAndPatternSystems",
          "TestPerformanceAndScalability",
          "TestErrorHandlingAndEdgeCases"
        ],
        "test_functions": [
          "test_chronicler_initialization",
          "test_narrative_templates_debranded",
          "test_faction_descriptions_generic",
          "test_narrative_style_management",
          "test_campaign_log_parsing",
          "test_narrative_segment_generation",
          "test_story_length_adequacy",
          "test_story_structure_coherence",
          "test_character_integration_in_stories",
          "test_story_atmosphere_consistency",
          "test_story_readability",
          "test_no_branded_content_in_generated_stories",
          "test_generic_faction_usage_in_stories",
          "test_sci_fi_theme_replacement",
          "test_sci_fi_dramatic_style",
          "test_tactical_style",
          "test_philosophical_style",
          "test_multiple_character_story_generation",
          "test_character_faction_integration",
          "test_response_template_variety",
          "test_narrative_opening_templates",
          "test_story_generation_performance",
          "test_large_log_handling",
          "test_empty_log_handling",
          "test_malformed_log_handling",
          "test_nonexistent_log_handling",
          "test_corrupted_log_recovery"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "performance",
          "ui",
          "quality",
          "security",
          "narrative",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_term_guard.py",
      "category": "core",
      "confidence": 0.4,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "pytest",
          "tempfile",
          "json",
          "yaml",
          "pathlib",
          "unittest.mock"
        ],
        "test_classes": [
          "TestFilterRule",
          "TestIPViolation",
          "TestTermGuard",
          "TestTermGuardIntegration",
          "TestTermGuardCLI"
        ],
        "test_functions": [
          "test_filter_rule_creation",
          "test_filter_rule_defaults",
          "test_ip_violation_creation",
          "test_term_guard_initialization",
          "test_term_guard_default_initialization",
          "test_analyze_content_basic",
          "test_analyze_content_whitelist",
          "test_clean_content_replace",
          "test_clean_content_block",
          "test_clean_content_analyze_only",
          "test_generic_replacement_generation",
          "test_compliance_report_generation",
          "test_compliance_report_empty",
          "test_complex_content_cleaning",
          "test_configuration_error_handling",
          "test_regex_error_handling",
          "test_cli_analyze_only",
          "test_cli_clean_with_output",
          "test_cli_compliance_report",
          "test_cli_file_not_found"
        ],
        "markers": [],
        "keywords": [
          "character",
          "integration",
          "config",
          "ui"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\test_user_stories.py",
      "category": "api",
      "confidence": 0.8,
      "target": "tests/integration/api",
      "analysis": {
        "imports": [
          "pytest",
          "asyncio",
          "json",
          "tempfile",
          "os",
          "datetime",
          "typing",
          "pathlib",
          "fastapi.testclient",
          "httpx",
          "src.core.system_orchestrator",
          "src.core.data_models",
          "src.api.main_api_server",
          "src.templates.character_template_manager",
          "src.interactions.interaction_engine"
        ],
        "test_classes": [
          "TestUserStories"
        ],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "endpoint",
          "fastapi",
          "agent",
          "persona",
          "character",
          "integration",
          "config",
          "event",
          "logging",
          "multi_agent",
          "interaction",
          "equipment",
          "dynamic",
          "performance",
          "async",
          "ui",
          "quality",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_api_comprehensive.py",
      "category": "api",
      "confidence": 1.0,
      "target": "tests/integration/api",
      "analysis": {
        "imports": [
          "asyncio",
          "httpx",
          "json",
          "time",
          "uuid",
          "websockets",
          "logging",
          "datetime",
          "typing",
          "contextlib",
          "subprocess",
          "signal",
          "os",
          "sys",
          "dataclasses",
          "threading"
        ],
        "test_classes": [
          "TestResult"
        ],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "endpoint",
          "uvicorn",
          "agent",
          "persona",
          "director",
          "character",
          "config",
          "logging",
          "interaction",
          "performance",
          "optimization",
          "async",
          "ui",
          "quality",
          "security",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_api_endpoints.py",
      "category": "api",
      "confidence": 1.0,
      "target": "tests/integration/api",
      "analysis": {
        "imports": [
          "requests",
          "time",
          "threading",
          "uvicorn",
          "api_server"
        ],
        "test_classes": [],
        "test_functions": [
          "test_endpoints"
        ],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "endpoint",
          "uvicorn",
          "character",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_api_final_comprehensive.py",
      "category": "api",
      "confidence": 1.0,
      "target": "tests/integration/api",
      "analysis": {
        "imports": [
          "asyncio",
          "json",
          "time",
          "uuid",
          "logging",
          "datetime",
          "typing",
          "dataclasses",
          "sys",
          "os",
          "fastapi.testclient"
        ],
        "test_classes": [
          "TestResult"
        ],
        "test_functions": [
          "test_endpoint",
          "test_health_endpoint",
          "test_root_endpoint",
          "test_character_endpoints",
          "test_story_generation_endpoints",
          "test_interaction_endpoints",
          "test_error_handling",
          "test_performance",
          "test_security_headers"
        ],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "endpoint",
          "fastapi",
          "agent",
          "persona",
          "character",
          "config",
          "logging",
          "interaction",
          "performance",
          "optimization",
          "async",
          "ui",
          "quality",
          "security",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_api_server.py",
      "category": "api",
      "confidence": 1.0,
      "target": "tests/integration/api",
      "analysis": {
        "imports": [
          "pytest",
          "json",
          "logging",
          "os",
          "tempfile",
          "uuid",
          "typing",
          "unittest.mock",
          "fastapi.testclient",
          "fastapi",
          "api_server"
        ],
        "test_classes": [
          "TestRootEndpoint",
          "TestHealthEndpoint",
          "TestErrorHandling",
          "TestCORSMiddleware",
          "TestAPIDocumentation",
          "TestServerConfiguration",
          "TestResponseModels",
          "TestCharactersEndpoint",
          "TestIntegrationScenarios",
          "TestCharacterDetailEndpoint",
          "TestCharacterDetailEndpointImplementationExpectations",
          "TestSimulationsEndpoint",
          "TestSimulationEndpointExpectedBehavior",
          "TestCharacterCreationEndpoint",
          "TestCampaignsListEndpoint",
          "TestCampaignCreationEndpoint",
          "TestCampaignBriefGeneration"
        ],
        "test_functions": [
          "test_root_endpoint_success",
          "test_root_endpoint_response_model",
          "test_root_endpoint_logging",
          "test_root_endpoint_with_config_error",
          "test_health_endpoint_success",
          "test_health_endpoint_config_error",
          "test_health_endpoint_logging",
          "test_404_not_found",
          "test_health_endpoint_exception_handling",
          "test_error_logging",
          "test_cors_headers_present",
          "test_preflight_request",
          "test_openapi_docs_accessible",
          "test_redoc_docs_accessible",
          "test_openapi_json_accessible",
          "test_api_metadata",
          "test_lifespan_success",
          "test_lifespan_config_error",
          "test_health_response_model_validation",
          "test_error_response_model_validation",
          "test_characters_response_model_validation",
          "test_characters_endpoint_success",
          "test_characters_endpoint_logging",
          "test_characters_endpoint_api_documentation",
          "test_characters_endpoint_response_headers",
          "test_characters_endpoint_success_scenario_mock",
          "test_characters_endpoint_directory_not_found_scenario_mock",
          "test_characters_endpoint_cors_support",
          "test_full_health_check_workflow",
          "test_api_documentation_workflow",
          "test_characters_endpoint_integration_workflow",
          "test_character_detail_response_model_validation",
          "test_character_detail_endpoint_not_implemented",
          "test_character_detail_endpoint_various_characters",
          "test_character_detail_endpoint_invalid_character_names",
          "test_character_detail_endpoint_api_documentation",
          "test_character_detail_endpoint_response_headers",
          "test_character_detail_endpoint_logging",
          "test_expected_success_case_with_real_character",
          "test_expected_404_for_nonexistent_character",
          "test_expected_behavior_with_test_character",
          "test_simulation_request_model_validation",
          "test_simulation_request_model_validation_errors",
          "test_simulation_response_model_validation",
          "test_simulation_endpoint_implemented_behavior",
          "test_simulation_endpoint_request_validation_errors",
          "test_simulation_endpoint_malformed_json",
          "test_simulation_endpoint_api_documentation",
          "test_simulation_endpoint_cors_support",
          "test_expected_successful_simulation_with_valid_characters",
          "test_expected_404_for_nonexistent_characters",
          "test_expected_default_configuration_handling",
          "test_expected_edge_case_minimum_characters",
          "test_expected_edge_case_maximum_characters",
          "test_expected_narrative_style_handling",
          "test_expected_mixed_existing_and_nonexistent_characters",
          "test_expected_simulation_performance_metadata",
          "test_character_creation_multipart_form_validation",
          "test_character_creation_with_ai_scribe_success",
          "test_character_creation_file_structure_validation",
          "test_character_creation_content_parsing_validation",
          "test_character_creation_ai_scribe_fallback_scenario",
          "test_character_creation_validation_errors_multipart",
          "test_character_creation_duplicate_name_conflict",
          "test_character_creation_file_upload_processing",
          "test_character_creation_gemini_api_error_handling",
          "test_character_creation_malformed_ai_response_handling",
          "test_character_creation_api_documentation_multipart",
          "test_character_creation_cors_support",
          "test_character_creation_complete_integration_workflow",
          "test_campaigns_response_model_validation",
          "test_get_campaigns_endpoint_success",
          "test_get_campaigns_directory_not_found",
          "test_get_campaigns_permission_error",
          "test_campaign_creation_request_model_validation",
          "test_campaign_creation_response_model_validation",
          "test_post_campaigns_endpoint_success",
          "test_post_campaigns_duplicate_name_conflict",
          "test_post_campaigns_invalid_name_format",
          "test_post_campaigns_directory_creation_failure",
          "test_post_campaigns_missing_required_field",
          "test_campaign_creation_with_brief_generation_success",
          "test_campaign_creation_brief_generation_failure",
          "test_campaign_creation_without_description",
          "test_campaign_creation_empty_description",
          "test_campaign_creation_description_too_long"
        ],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "endpoint",
          "fastapi",
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "logging",
          "llm",
          "equipment",
          "performance",
          "ui",
          "security",
          "narrative",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\legacy\\test_api_startup.py",
      "category": "api",
      "confidence": 1.0,
      "target": "tests/integration/api",
      "analysis": {
        "imports": [
          "asyncio",
          "sys",
          "os"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "endpoint",
          "fastapi",
          "character",
          "interaction",
          "async",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_api_startup_debug.py",
      "category": "api",
      "confidence": 1.0,
      "target": "tests/integration/api",
      "analysis": {
        "imports": [
          "asyncio",
          "sys",
          "os",
          "logging",
          "fastapi",
          "fastapi.middleware.cors"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "fastapi",
          "config",
          "logging",
          "async",
          "ui"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_api_startup_full.py",
      "category": "api",
      "confidence": 1.0,
      "target": "tests/integration/api",
      "analysis": {
        "imports": [
          "asyncio",
          "sys",
          "os",
          "logging",
          "fastapi.testclient"
        ],
        "test_classes": [],
        "test_functions": [
          "test_api_startup"
        ],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "endpoint",
          "fastapi",
          "agent",
          "character",
          "config",
          "event",
          "logging",
          "async",
          "ui"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_character_decisions.py",
      "category": "interactions",
      "confidence": 1.0,
      "target": "tests/integration/interactions",
      "analysis": {
        "imports": [
          "sys",
          "os",
          "character_factory",
          "datetime"
        ],
        "test_classes": [],
        "test_functions": [
          "test_character_decisions"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "character",
          "event"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_character_name_fix.py",
      "category": "interactions",
      "confidence": 1.0,
      "target": "tests/integration/interactions",
      "analysis": {
        "imports": [
          "sys",
          "os",
          "character_factory"
        ],
        "test_classes": [],
        "test_functions": [
          "test_character_names"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "character"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_chronicler_agent.py",
      "category": "specialized",
      "confidence": 1.0,
      "target": "tests/integration/components",
      "analysis": {
        "imports": [
          "pytest",
          "os",
          "tempfile",
          "shutil",
          "json",
          "time",
          "datetime",
          "typing",
          "unittest.mock",
          "pathlib",
          "chronicler_agent"
        ],
        "test_classes": [
          "TestChroniclerAgent",
          "TestCampaignEventDataClass",
          "TestNarrativeSegmentDataClass",
          "TestChroniclerIntegration"
        ],
        "test_functions": [
          "test_chronicler_initialization_basic",
          "test_chronicler_initialization_with_output_directory",
          "test_chronicler_initialization_invalid_output_directory",
          "test_transcribe_log_basic_functionality",
          "test_transcribe_log_with_output_file",
          "test_transcribe_log_file_not_found",
          "test_transcribe_log_invalid_file_path",
          "test_transcribe_log_empty_file",
          "test_transcribe_log_malformed_file",
          "test_narrative_style_management",
          "test_chronicler_status_reporting",
          "test_campaign_event_parsing",
          "test_narrative_segment_generation",
          "test_llm_integration_mocking",
          "test_llm_failure_fallback",
          "test_performance_large_log",
          "test_multiple_log_processing",
          "test_faction_descriptions_utilization",
          "test_error_recovery_and_logging",
          "test_narrative_combination_flow",
          "test_utility_functions",
          "test_campaign_event_creation",
          "test_campaign_event_defaults",
          "test_narrative_segment_creation",
          "test_narrative_segment_defaults",
          "test_end_to_end_workflow"
        ],
        "markers": [],
        "keywords": [
          "api",
          "agent",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "logging",
          "llm",
          "interaction",
          "performance",
          "ui",
          "narrative",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\legacy\\test_config_integration.py",
      "category": "core",
      "confidence": 1.0,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "os",
          "tempfile",
          "config_loader",
          "director_agent",
          "chronicler_agent"
        ],
        "test_classes": [],
        "test_functions": [
          "test_config_loading",
          "test_director_agent_config",
          "test_chronicler_agent_config",
          "test_config_fallbacks",
          "test_environment_overrides"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "cache",
          "ui",
          "narrative",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_fix_p02.py",
      "category": "agents",
      "confidence": 0.4,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "sys",
          "os",
          "chronicler_agent",
          "tempfile"
        ],
        "test_classes": [],
        "test_functions": [
          "test_character_name_integration"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "director",
          "character",
          "integration",
          "event",
          "quality",
          "narrative"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_integration.py",
      "category": "core",
      "confidence": 1.0,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "pytest",
          "os",
          "tempfile",
          "shutil",
          "datetime",
          "typing",
          "unittest.mock",
          "director_agent",
          "src.persona_agent",
          "shared_types",
          "character_factory"
        ],
        "test_classes": [
          "TestPersonaDirectorIntegration",
          "TestIntegrationRunner"
        ],
        "test_functions": [
          "test_complete_integration_workflow",
          "test_agent_registration_validation",
          "test_turn_execution_with_different_agent_behaviors",
          "test_error_handling_during_integration",
          "test_campaign_log_structure_and_format",
          "test_multiple_turns_integration",
          "test_world_state_propagation",
          "test_prerequisite_validation",
          "test_integration_system_ready"
        ],
        "markers": [],
        "keywords": [
          "api",
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "logging",
          "interaction",
          "ui"
        ],
        "complexity": "moderate"
      }
    },
    {
      "source": "tests\\legacy\\test_legacy_endpoints.py",
      "category": "api",
      "confidence": 1.0,
      "target": "tests/integration/api",
      "analysis": {
        "imports": [
          "asyncio",
          "subprocess",
          "time",
          "requests",
          "json",
          "threading",
          "uvicorn",
          "sys",
          "os",
          "src.api.main_api_server"
        ],
        "test_classes": [],
        "test_functions": [
          "test_endpoints"
        ],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "endpoint",
          "uvicorn",
          "character",
          "config",
          "async",
          "ui",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_llm_specific_functionality.py",
      "category": "bridges",
      "confidence": 1.0,
      "target": "tests/integration/bridges",
      "analysis": {
        "imports": [
          "pytest",
          "logging",
          "os",
          "unittest.mock",
          "src.persona_agent",
          "shared_types",
          "character_factory"
        ],
        "test_classes": [
          "TestLLMIntegrationFunctionality"
        ],
        "test_functions": [
          "test_llm_enhanced_decision_making_success",
          "test_prompt_construction_contains_character_data",
          "test_llm_response_parsing_valid_format",
          "test_llm_response_parsing_direct_action_type",
          "test_llm_response_parsing_wait_action",
          "test_llm_response_parsing_malformed_input",
          "test_llm_action_priority_determination",
          "test_fallback_mechanism_on_llm_failure",
          "test_deterministic_llm_responses_for_testing",
          "test_character_traits_influence_llm_responses"
        ],
        "markers": [],
        "keywords": [
          "api",
          "agent",
          "persona",
          "character",
          "integration",
          "event",
          "logging",
          "llm",
          "ui"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_memory_functionality.py",
      "category": "agents",
      "confidence": 0.6000000000000001,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "src.persona_agent",
          "character_factory",
          "os"
        ],
        "test_classes": [],
        "test_functions": [
          "test_memory_logging"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "event",
          "logging"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_narrative_engine.py",
      "category": "specialized",
      "confidence": 1.0,
      "target": "tests/integration/components",
      "analysis": {
        "imports": [
          "pytest",
          "os",
          "tempfile",
          "shutil",
          "pathlib",
          "typing",
          "unittest.mock",
          "director_agent",
          "src.persona_agent",
          "shared_types",
          "campaign_brief",
          "narrative_actions"
        ],
        "test_classes": [
          "TestCampaignBriefInfrastructure",
          "TestDirectorAgentNarrativeEnhancement",
          "TestPersonaAgentStoryIntelligence",
          "TestNarrativeActionFramework",
          "TestShadowsSerenityStationScenario",
          "TestNarrativeQualityAssurance"
        ],
        "test_functions": [
          "test_campaign_brief_loader_yaml",
          "test_campaign_brief_validation",
          "test_narrative_event_structure",
          "test_director_campaign_brief_loading",
          "test_narrative_context_generation",
          "test_story_state_tracking",
          "test_narrative_situation_processing",
          "test_narrative_action_identification",
          "test_narrative_action_evaluation",
          "test_investigate_action_resolution",
          "test_dialogue_action_resolution",
          "test_diplomacy_action_resolution",
          "test_betrayal_action_resolution",
          "test_complete_narrative_scenario",
          "test_character_agency_in_story_decisions",
          "test_story_progression_coherence",
          "test_narrative_action_diversity",
          "test_character_consistency"
        ],
        "markers": [
          "skipif"
        ],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "event",
          "ui",
          "quality",
          "narrative",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\legacy\\test_p03_comprehensive.py",
      "category": "agents",
      "confidence": 0.6000000000000001,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "sys",
          "os",
          "tempfile",
          "json",
          "character_factory",
          "director_agent",
          "chronicler_agent"
        ],
        "test_classes": [],
        "test_functions": [
          "test_complete_character_integration"
        ],
        "markers": [],
        "keywords": [
          "api",
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "narrative",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_persona_agent_methods.py",
      "category": "agents",
      "confidence": 1.0,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "sys",
          "os",
          "character_factory"
        ],
        "test_classes": [],
        "test_functions": [
          "test_persona_agent_methods"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "character",
          "narrative"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_simple_integration.py",
      "category": "core",
      "confidence": 1.0,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "asyncio",
          "tempfile",
          "pathlib",
          "src.ai_intelligence.integration_orchestrator"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "agent",
          "character",
          "integration",
          "config",
          "async",
          "ui",
          "quality",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_story_quality.py",
      "category": "specialized",
      "confidence": 1.0,
      "target": "tests/integration/components",
      "analysis": {
        "imports": [
          "sys",
          "os",
          "character_factory",
          "director_agent",
          "chronicler_agent",
          "datetime"
        ],
        "test_classes": [],
        "test_functions": [
          "test_story_quality"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "director",
          "character",
          "event",
          "quality",
          "narrative",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\legacy\\test_world_heart_system.py",
      "category": "agents",
      "confidence": 0.6000000000000001,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "pytest",
          "os",
          "tempfile",
          "shutil",
          "pathlib",
          "typing",
          "unittest.mock",
          "director_agent",
          "src.persona_agent",
          "shared_types"
        ],
        "test_classes": [
          "TestWorldStateTracker",
          "TestActionImpactProcessing",
          "TestWorldStateFeedback",
          "TestSacredValidationInvestigationLoop",
          "TestWorldHeartIntegration"
        ],
        "test_functions": [
          "test_world_state_tracker_initialization",
          "test_world_state_persistence_across_turns",
          "test_investigate_action_processing",
          "test_search_action_processing",
          "test_analyze_action_processing",
          "test_non_investigation_action_ignored",
          "test_agent_discoveries_feedback_generation",
          "test_world_state_feedback_integration",
          "test_environmental_changes_feedback",
          "test_world_state_summary_generation",
          "test_sacred_validation_complete_feedback_loop",
          "test_multi_agent_investigation_coordination",
          "test_persistent_world_state_across_multiple_turns",
          "test_world_heart_system_integration_with_existing_narrative",
          "test_world_heart_performance_with_extended_simulation"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "multi_agent",
          "dynamic",
          "performance",
          "ui",
          "narrative",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\root_tests\\test_api_functionality.py",
      "category": "api",
      "confidence": 1.0,
      "target": "tests/integration/api",
      "analysis": {
        "imports": [
          "os",
          "sys",
          "json",
          "time",
          "logging",
          "asyncio",
          "requests",
          "datetime",
          "typing"
        ],
        "test_classes": [],
        "test_functions": [
          "test_gemini_api_direct",
          "test_api_endpoints"
        ],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "endpoint",
          "fastapi",
          "uvicorn",
          "character",
          "config",
          "logging",
          "async",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_api_simple.py",
      "category": "api",
      "confidence": 1.0,
      "target": "tests/integration/api",
      "analysis": {
        "imports": [
          "os",
          "sys",
          "json",
          "time",
          "requests",
          "datetime"
        ],
        "test_classes": [],
        "test_functions": [
          "test_gemini_direct",
          "test_api_server"
        ],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "endpoint",
          "character",
          "config"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_async_llm_performance.py",
      "category": "performance",
      "confidence": 1.0,
      "target": "tests/performance",
      "analysis": {
        "imports": [
          "asyncio",
          "time",
          "logging",
          "typing",
          "datetime"
        ],
        "test_classes": [],
        "test_functions": [
          "test_persona_agent_patch"
        ],
        "markers": [],
        "keywords": [
          "api",
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "logging",
          "llm",
          "performance",
          "optimization",
          "async",
          "cache"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_async_processing_improvements.py",
      "category": "performance",
      "confidence": 1.0,
      "target": "tests/performance",
      "analysis": {
        "imports": [
          "asyncio",
          "gc",
          "json",
          "logging",
          "random",
          "time",
          "psutil",
          "typing",
          "pathlib",
          "src.performance_optimizations.async_processing_improvements"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "agent",
          "integration",
          "config",
          "logging",
          "llm",
          "interaction",
          "performance",
          "optimization",
          "async",
          "ui"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_bridge_components_simple.py",
      "category": "bridges",
      "confidence": 1.0,
      "target": "tests/integration/bridges",
      "analysis": {
        "imports": [
          "asyncio",
          "logging",
          "sys",
          "os"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "agent",
          "config",
          "event",
          "logging",
          "bridge",
          "llm",
          "multi_agent",
          "performance",
          "async",
          "quality"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_bridge_core_only.py",
      "category": "bridges",
      "confidence": 1.0,
      "target": "tests/integration/bridges",
      "analysis": {
        "imports": [
          "asyncio",
          "logging",
          "sys",
          "os"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "agent",
          "integration",
          "config",
          "event",
          "logging",
          "bridge",
          "llm",
          "multi_agent",
          "interaction",
          "performance",
          "optimization",
          "async",
          "ui",
          "quality"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_code_quality_analyzer.py",
      "category": "quality",
      "confidence": 1.0,
      "target": "tests/unit/quality",
      "analysis": {
        "imports": [
          "asyncio",
          "json",
          "logging",
          "os",
          "sys",
          "time",
          "pathlib",
          "typing",
          "quality.code_quality_analyzer"
        ],
        "test_classes": [],
        "test_functions": [
          "test_analyzer_components"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "director",
          "config",
          "logging",
          "bridge",
          "llm",
          "multi_agent",
          "performance",
          "optimization",
          "async",
          "cache",
          "ui",
          "quality",
          "security",
          "narrative"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_core_systems.py",
      "category": "core",
      "confidence": 1.0,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "asyncio",
          "sys",
          "os",
          "pathlib",
          "src.core.error_handler",
          "src.core.logging_system"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "api",
          "director",
          "integration",
          "event",
          "logging",
          "performance",
          "async",
          "security"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_director_agent_loop_optimization.py",
      "category": "agents",
      "confidence": 1.0,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "asyncio",
          "time",
          "random",
          "logging",
          "psutil",
          "typing",
          "dataclasses",
          "pathlib",
          "src.performance_optimizations.director_agent_loop_optimizer"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "agent",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "logging",
          "performance",
          "optimization",
          "async",
          "cache",
          "ui",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_director_refactored.py",
      "category": "agents",
      "confidence": 1.0,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "asyncio",
          "logging",
          "os",
          "tempfile",
          "unittest",
          "unittest.mock",
          "typing",
          "director_agent_refactored_complete",
          "director_agent_components",
          "director_agent_extended_components"
        ],
        "test_classes": [
          "TestDirectorAgentComponents",
          "TestDirectorAgentIntegration",
          "TestSystemResilience"
        ],
        "test_functions": [
          "test_agent_lifecycle_manager_initialization",
          "test_agent_lifecycle_manager_agent_registration",
          "test_world_state_manager_initialization",
          "test_world_state_manager_save_load",
          "test_campaign_logging_service",
          "test_configuration_service",
          "test_error_handler",
          "test_director_agent_creation",
          "test_director_agent_factory_functions",
          "test_backward_compatibility_interface",
          "test_enhanced_interface_methods",
          "test_component_access_properties",
          "test_error_recovery",
          "test_component_failure_isolation",
          "test_initialization_resilience"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "logging",
          "performance",
          "async",
          "ui",
          "narrative"
        ],
        "complexity": "moderate"
      }
    },
    {
      "source": "tests\\root_tests\\test_dynamic_equipment_system_modular.py",
      "category": "interactions",
      "confidence": 1.0,
      "target": "tests/integration/interactions",
      "analysis": {
        "imports": [
          "asyncio",
          "logging",
          "sys",
          "os",
          "datetime",
          "dataclasses"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "api",
          "agent",
          "integration",
          "config",
          "logging",
          "interaction",
          "equipment",
          "dynamic",
          "performance",
          "optimization",
          "async",
          "ui",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_enhanced_multi_agent_bridge_modular.py",
      "category": "bridges",
      "confidence": 1.0,
      "target": "tests/integration/bridges",
      "analysis": {
        "imports": [
          "asyncio",
          "pytest",
          "logging",
          "typing",
          "unittest.mock",
          "src.bridges.multi_agent_bridge"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "director",
          "integration",
          "config",
          "event",
          "logging",
          "bridge",
          "llm",
          "multi_agent",
          "performance",
          "async"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_equipment_system_simple.py",
      "category": "interactions",
      "confidence": 1.0,
      "target": "tests/integration/interactions",
      "analysis": {
        "imports": [
          "asyncio",
          "logging",
          "sys",
          "os"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "agent",
          "integration",
          "config",
          "logging",
          "interaction",
          "equipment",
          "dynamic",
          "performance",
          "async",
          "ui",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_fixed_api.py",
      "category": "api",
      "confidence": 1.0,
      "target": "tests/integration/api",
      "analysis": {
        "imports": [
          "os",
          "sys",
          "time",
          "json",
          "requests",
          "subprocess",
          "datetime",
          "os",
          "logging",
          "uvicorn",
          "fastapi",
          "fastapi.responses",
          "fastapi.middleware.cors",
          "pydantic",
          "typing",
          "time"
        ],
        "test_classes": [],
        "test_functions": [
          "test_minimal_api"
        ],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "fastapi",
          "uvicorn",
          "character",
          "config",
          "logging",
          "async"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_intelligent_caching_system.py",
      "category": "performance",
      "confidence": 1.0,
      "target": "tests/performance",
      "analysis": {
        "imports": [
          "asyncio",
          "gc",
          "json",
          "logging",
          "random",
          "time",
          "psutil",
          "typing",
          "pathlib",
          "src.performance_optimizations.intelligent_caching_system"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "agent",
          "config",
          "logging",
          "llm",
          "performance",
          "optimization",
          "async",
          "cache",
          "ui"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_interaction_engine_comprehensive.py",
      "category": "interactions",
      "confidence": 1.0,
      "target": "tests/integration/interactions",
      "analysis": {
        "imports": [
          "asyncio",
          "logging",
          "time",
          "datetime",
          "typing"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "agent",
          "character",
          "integration",
          "config",
          "logging",
          "interaction",
          "performance",
          "async",
          "ui"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_interaction_engine_simple.py",
      "category": "interactions",
      "confidence": 1.0,
      "target": "tests/integration/interactions",
      "analysis": {
        "imports": [
          "asyncio",
          "logging",
          "datetime"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "agent",
          "integration",
          "config",
          "logging",
          "interaction",
          "performance",
          "async",
          "ui"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_interaction_engine_system_comprehensive.py",
      "category": "interactions",
      "confidence": 1.0,
      "target": "tests/integration/interactions",
      "analysis": {
        "imports": [
          "asyncio",
          "logging",
          "pytest",
          "datetime",
          "typing"
        ],
        "test_classes": [
          "TestInteractionEngineSystemComprehensive"
        ],
        "test_functions": [],
        "markers": [
          "asyncio"
        ],
        "keywords": [
          "agent",
          "character",
          "integration",
          "config",
          "logging",
          "interaction",
          "equipment",
          "performance",
          "async",
          "ui"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_memory_leak_fixes.py",
      "category": "performance",
      "confidence": 1.0,
      "target": "tests/performance",
      "analysis": {
        "imports": [
          "asyncio",
          "gc",
          "logging",
          "psutil",
          "time",
          "threading",
          "typing",
          "pathlib",
          "src.performance_optimizations.memory_leak_fixes"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "character",
          "config",
          "event",
          "logging",
          "llm",
          "interaction",
          "performance",
          "optimization",
          "async",
          "cache",
          "ui",
          "narrative",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_memory_optimization_gc.py",
      "category": "performance",
      "confidence": 1.0,
      "target": "tests/performance",
      "analysis": {
        "imports": [
          "asyncio",
          "gc",
          "logging",
          "psutil",
          "time",
          "threading",
          "typing",
          "pathlib",
          "src.performance_optimizations.memory_optimization_gc"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "config",
          "event",
          "logging",
          "llm",
          "interaction",
          "performance",
          "optimization",
          "async",
          "cache",
          "ui",
          "narrative",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_modular_components_comprehensive.py",
      "category": "core",
      "confidence": 0.8,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "pytest",
          "asyncio",
          "logging",
          "datetime",
          "typing",
          "unittest.mock"
        ],
        "test_classes": [
          "TestPersonaAgentModularComponents",
          "TestInteractionEngineModularComponents",
          "TestMultiAgentBridgeModularComponents",
          "TestModularComponentIntegration",
          "TestModularComponentPerformance"
        ],
        "test_functions": [
          "test_persona_memory_manager_component",
          "test_interaction_engine_initialization",
          "test_enhanced_bridge_initialization",
          "test_cost_tracker_component"
        ],
        "markers": [
          "asyncio"
        ],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "logging",
          "bridge",
          "llm",
          "multi_agent",
          "interaction",
          "performance",
          "async",
          "ui"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\root_tests\\test_persona_agent_modular.py",
      "category": "agents",
      "confidence": 1.0,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "asyncio",
          "pytest",
          "tempfile",
          "json",
          "os",
          "datetime",
          "pathlib",
          "src.agents.persona_agent_modular"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "character",
          "integration",
          "event",
          "llm",
          "async",
          "ui"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_persona_agent_refactored.py",
      "category": "agents",
      "confidence": 1.0,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "sys",
          "logging",
          "time",
          "pathlib",
          "typing"
        ],
        "test_classes": [],
        "test_functions": [
          "test_persona_core",
          "test_character_context_manager",
          "test_decision_engine",
          "test_refactored_persona_agent",
          "test_performance_improvements"
        ],
        "markers": [],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "config",
          "event",
          "logging",
          "equipment",
          "performance",
          "ui"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_runner.py",
      "category": "unclassified",
      "confidence": 0.0,
      "target": null,
      "analysis": {
        "imports": [
          "pytest",
          "sys",
          "time",
          "pathlib"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "integration",
          "performance",
          "ui"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_ui_functionality.py",
      "category": "frontend",
      "confidence": 1.0,
      "target": "tests/integration/frontend",
      "analysis": {
        "imports": [
          "os",
          "sys",
          "json",
          "time",
          "subprocess",
          "requests",
          "datetime",
          "pathlib",
          "{",
          "{"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "api",
          "server",
          "character",
          "async",
          "frontend",
          "ui",
          "playwright",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_ui_simple.py",
      "category": "frontend",
      "confidence": 1.0,
      "target": "tests/integration/frontend",
      "analysis": {
        "imports": [
          "os",
          "sys",
          "json",
          "time",
          "subprocess",
          "requests",
          "datetime",
          "pathlib"
        ],
        "test_classes": [],
        "test_functions": [
          "test_frontend_basic"
        ],
        "markers": [],
        "keywords": [
          "server",
          "async",
          "frontend",
          "ui",
          "playwright",
          "story"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\root_tests\\test_wave2_components.py",
      "category": "core",
      "confidence": 0.6000000000000001,
      "target": "tests/integration/core",
      "analysis": {
        "imports": [
          "asyncio",
          "logging",
          "sys",
          "pathlib"
        ],
        "test_classes": [],
        "test_functions": [],
        "markers": [],
        "keywords": [
          "agent",
          "director",
          "integration",
          "config",
          "logging",
          "async",
          "ui",
          "narrative"
        ],
        "complexity": "simple"
      }
    },
    {
      "source": "tests\\security\\test_comprehensive_security.py",
      "category": "security",
      "confidence": 1.0,
      "target": "tests/security",
      "analysis": {
        "imports": [
          "pytest",
          "asyncio",
          "json",
          "time",
          "httpx",
          "typing",
          "datetime",
          "jwt",
          "secrets",
          "unittest.mock",
          "sys",
          "pathlib",
          "src.security.auth_system",
          "src.security.input_validation",
          "src.security.rate_limiting",
          "src.security.security_headers",
          "src.api.main_api_server"
        ],
        "test_classes": [
          "TestAuthentication",
          "TestAuthorization",
          "TestInputValidation",
          "TestRateLimiting",
          "TestSecurityHeaders",
          "TestVulnerabilityAssessment",
          "TestSecurityMonitoring",
          "TestSecurityPerformance",
          "TestSecurityIntegration"
        ],
        "test_functions": [
          "test_sql_injection_detection",
          "test_xss_detection",
          "test_command_injection_detection",
          "test_input_sanitization",
          "test_security_headers_configuration"
        ],
        "markers": [
          "asyncio"
        ],
        "keywords": [
          "api",
          "server",
          "endpoint",
          "character",
          "integration",
          "config",
          "event",
          "logging",
          "performance",
          "async",
          "ui",
          "security",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\unit\\test_character_factory.py",
      "category": "agents",
      "confidence": 0.6000000000000001,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "pytest",
          "os",
          "tempfile",
          "unittest.mock",
          "pathlib",
          "yaml"
        ],
        "test_classes": [
          "TestCharacterFactory",
          "TestCharacterFactoryConfiguration",
          "TestCharacterFactoryPerformance"
        ],
        "test_functions": [
          "test_factory_initialization_success",
          "test_factory_initialization_no_event_bus",
          "test_create_character_success",
          "test_create_character_not_found",
          "test_create_character_invalid_name",
          "test_load_character_data_success",
          "test_validate_character_directory_success",
          "test_validate_character_directory_invalid",
          "test_character_factory_error_handling",
          "test_multiple_character_creation",
          "test_factory_with_different_configurations",
          "test_factory_character_path_resolution",
          "test_character_creation_performance"
        ],
        "markers": [
          "skipif",
          "unit",
          "performance"
        ],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "config",
          "event",
          "performance"
        ],
        "complexity": "moderate"
      }
    },
    {
      "source": "tests\\unit\\test_director_agent_advanced.py",
      "category": "agents",
      "confidence": 1.0,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "pytest",
          "os",
          "json",
          "tempfile",
          "unittest.mock",
          "pathlib",
          "datetime",
          "typing"
        ],
        "test_classes": [
          "TestDirectorAgentKnowledgeSystem",
          "TestDirectorAgentNarrativeEngine",
          "TestDirectorAgentWorldStateManagement",
          "TestDirectorAgentAgentOrchestration",
          "TestDirectorAgentEventHandling"
        ],
        "test_functions": [
          "test_retrieve_relevant_knowledge_rag_no_knowledge_base",
          "test_create_default_knowledge_fragments",
          "test_extract_rag_context_keywords",
          "test_rank_knowledge_fragments",
          "test_narrative_resolver_initialization",
          "test_story_state_tracking",
          "test_world_state_tracker_initialization",
          "test_campaign_brief_integration",
          "test_world_state_data_initialization",
          "test_world_state_file_handling",
          "test_initialize_default_world_state",
          "test_world_state_persistence_methods",
          "test_agent_registration_capacity",
          "test_agent_validation_system",
          "test_turn_orchestration_workflow",
          "test_error_tracking_system",
          "test_simulation_state_tracking",
          "test_configuration_driven_parameters",
          "test_event_bus_integration",
          "test_agent_action_handling",
          "test_turn_start_event_emission",
          "test_event_logging_integration"
        ],
        "markers": [
          "skipif",
          "unit"
        ],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "logging",
          "ui",
          "narrative",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\unit\\test_director_agent_comprehensive.py",
      "category": "agents",
      "confidence": 1.0,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "pytest",
          "os",
          "json",
          "tempfile",
          "unittest.mock",
          "pathlib",
          "datetime"
        ],
        "test_classes": [
          "TestDirectorAgentInitialization",
          "TestDirectorAgentRegistration",
          "TestDirectorAgentTurnExecution",
          "TestDirectorAgentLogging",
          "TestDirectorAgentWorldState"
        ],
        "test_functions": [
          "test_initialization_with_valid_config",
          "test_initialization_without_config",
          "test_initialization_with_world_state_file",
          "test_initialization_with_campaign_brief",
          "test_initialization_event_bus_subscription",
          "test_register_agent_success",
          "test_register_agent_validation_checks",
          "test_register_multiple_agents",
          "test_register_agent_duplicate_handling",
          "test_register_agent_character_data_validation",
          "test_run_turn_with_registered_agents",
          "test_run_turn_no_agents",
          "test_run_turn_agent_error_handling",
          "test_campaign_log_initialization",
          "test_campaign_log_creation_with_existing_file",
          "test_log_event_functionality",
          "test_turn_logging_integration",
          "test_world_state_loading_existing_file",
          "test_world_state_initialization_missing_file",
          "test_world_state_agent_specific_generation"
        ],
        "markers": [
          "skipif",
          "unit"
        ],
        "keywords": [
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "config",
          "event",
          "logging",
          "ui",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\unit\\test_persona_agent_comprehensive.py",
      "category": "agents",
      "confidence": 1.0,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "pytest",
          "os",
          "json",
          "tempfile",
          "yaml",
          "unittest.mock",
          "pathlib",
          "datetime",
          "typing"
        ],
        "test_classes": [
          "TestPersonaAgentInitialization",
          "TestPersonaAgentCharacterLoading",
          "TestPersonaAgentDecisionMaking",
          "TestPersonaAgentWorldInterpretation",
          "TestPersonaAgentAIIntegration",
          "TestPersonaAgentMemoryAndEvolution"
        ],
        "test_functions": [
          "test_initialization_with_valid_character_directory",
          "test_initialization_auto_generate_agent_id",
          "test_initialization_missing_character_directory",
          "test_initialization_empty_character_directory",
          "test_event_bus_subscription",
          "test_character_data_parsing_basic_info",
          "test_character_data_parsing_personality_traits",
          "test_character_data_parsing_malformed_content",
          "test_multiple_character_files_handling",
          "test_handle_turn_start_basic_functionality",
          "test_handle_turn_start_no_action",
          "test_make_decision_with_valid_world_state",
          "test_decision_making_error_handling",
          "test_subjective_worldview_initialization",
          "test_world_event_interpretation_methods",
          "test_threat_assessment_capability",
          "test_ai_api_key_validation",
          "test_ai_integration_fallback_behavior",
          "test_ai_request_handling_with_mock",
          "test_memory_system_initialization",
          "test_character_evolution_tracking",
          "test_memory_persistence_capability"
        ],
        "markers": [
          "skipif",
          "unit"
        ],
        "keywords": [
          "api",
          "agent",
          "persona",
          "director",
          "character",
          "integration",
          "event",
          "llm",
          "equipment",
          "dynamic",
          "cache",
          "ui",
          "narrative"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\unit\\test_unit_api_server.py",
      "category": "api",
      "confidence": 1.0,
      "target": "tests/integration/api",
      "analysis": {
        "imports": [
          "pytest",
          "json",
          "os",
          "unittest.mock",
          "fastapi.testclient",
          "pathlib",
          "tempfile"
        ],
        "test_classes": [
          "TestAPIServerEndpoints",
          "TestAPIServerErrorHandling",
          "TestAPIServerSecurity",
          "TestAPIServerPerformance"
        ],
        "test_functions": [
          "test_root_endpoint_success",
          "test_health_endpoint_success",
          "test_health_endpoint_config_error",
          "test_characters_endpoint_empty_directory",
          "test_characters_endpoint_populated_directory",
          "test_characters_endpoint_directory_not_found",
          "test_character_detail_endpoint_success",
          "test_character_detail_endpoint_not_found",
          "test_simulations_endpoint_valid_request",
          "test_simulations_endpoint_invalid_request_empty_characters",
          "test_simulations_endpoint_invalid_request_too_many_characters",
          "test_simulations_endpoint_character_not_found",
          "test_campaigns_endpoint_success",
          "test_create_campaign_endpoint_success",
          "test_health_endpoint_severe_error",
          "test_characters_endpoint_permission_error",
          "test_characters_endpoint_unexpected_error",
          "test_simulations_endpoint_empty_character_list",
          "test_simulations_endpoint_character_loading_failure",
          "test_simulations_endpoint_director_turn_failure",
          "test_simulations_endpoint_story_generation_failure",
          "test_character_detail_endpoint_unexpected_error",
          "test_campaigns_endpoint_file_system_error",
          "test_create_campaign_endpoint_file_creation_failure",
          "test_404_endpoint_not_found",
          "test_405_method_not_allowed",
          "test_422_validation_error",
          "test_cors_headers_present",
          "test_input_validation_sql_injection_attempt",
          "test_input_validation_xss_attempt",
          "test_path_traversal_protection",
          "test_large_payload_handling",
          "test_health_endpoint_response_time",
          "test_characters_endpoint_response_time",
          "test_concurrent_health_checks"
        ],
        "markers": [
          "api",
          "performance",
          "security",
          "skipif",
          "slow"
        ],
        "keywords": [
          "api",
          "server",
          "endpoint",
          "fastapi",
          "agent",
          "director",
          "character",
          "config",
          "event",
          "performance",
          "ui",
          "security",
          "story"
        ],
        "complexity": "complex"
      }
    },
    {
      "source": "tests\\unit\\test_unit_chronicler_agent.py",
      "category": "agents",
      "confidence": 1.0,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "pytest",
          "os",
          "tempfile",
          "unittest.mock",
          "pathlib",
          "time"
        ],
        "test_classes": [
          "TestChroniclerAgent",
          "TestChroniclerAgentAdvanced",
          "TestChroniclerAgentPerformance"
        ],
        "test_functions": [
          "test_chronicler_initialization_success",
          "test_chronicler_initialization_no_event_bus",
          "test_chronicler_initialization_no_characters",
          "test_transcribe_log_success",
          "test_transcribe_log_file_not_found",
          "test_transcribe_log_empty_file",
          "test_transcribe_log_api_failure",
          "test_transcribe_log_invalid_response",
          "test_log_content_processing",
          "test_character_name_integration",
          "test_event_bus_integration",
          "test_story_quality_validation",
          "test_different_character_configurations",
          "test_large_log_file_handling",
          "test_transcription_performance",
          "test_multiple_transcriptions_performance"
        ],
        "markers": [
          "skipif",
          "unit",
          "performance"
        ],
        "keywords": [
          "api",
          "agent",
          "character",
          "integration",
          "config",
          "event",
          "performance",
          "ui",
          "quality",
          "story"
        ],
        "complexity": "moderate"
      }
    },
    {
      "source": "tests\\unit\\test_unit_director_agent.py",
      "category": "agents",
      "confidence": 1.0,
      "target": "tests/integration/agents",
      "analysis": {
        "imports": [
          "pytest",
          "os",
          "tempfile",
          "unittest.mock",
          "pathlib",
          "time"
        ],
        "test_classes": [
          "TestDirectorAgent",
          "TestDirectorAgentAdvanced",
          "TestDirectorAgentPerformance"
        ],
        "test_functions": [
          "test_director_initialization_success",
          "test_director_initialization_no_event_bus",
          "test_register_agent_success",
          "test_register_multiple_agents",
          "test_register_agent_duplicate",
          "test_register_agent_invalid_agent",
          "test_run_turn_success",
          "test_run_turn_no_agents",
          "test_run_turn_agent_failure",
          "test_campaign_logging",
          "test_event_bus_interaction",
          "test_director_state_management",
          "test_director_configuration_handling",
          "test_agent_registration_performance",
          "test_turn_execution_performance"
        ],
        "markers": [
          "skipif",
          "unit",
          "performance"
        ],
        "keywords": [
          "api",
          "agent",
          "director",
          "character",
          "config",
          "event",
          "logging",
          "interaction",
          "performance",
          "ui"
        ],
        "complexity": "moderate"
      }
    }
  ],
  "directories_to_create": [],
  "conflicts": [],
  "statistics": {
    "total_files": 82,
    "high_confidence": 70,
    "medium_confidence": 11,
    "low_confidence": 1,
    "categories": {
      "core": 17,
      "api": 14,
      "interactions": 8,
      "agents": 19,
      "bridges": 6,
      "performance": 7,
      "quality": 2,
      "security": 2,
      "specialized": 4,
      "unclassified": 1,
      "frontend": 2
    }
  }
}