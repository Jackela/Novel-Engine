apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: novel-engine
  labels:
    app: novel-engine
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "16m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: no-referrer-when-downgrade";
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - novel-engine.example.com
    secretName: novel-engine-tls
  rules:
  - host: novel-engine.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: novel-engine
            port:
              name: http
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: novel-engine
            port:
              name: http
      - path: /health
        pathType: Exact
        backend:
          service:
            name: novel-engine
            port:
              name: http
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: novel-engine
            port:
              name: http